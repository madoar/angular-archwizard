// color definitions
@wz-color-default: #E6E6E6;
@wz-color-current: #808080;
@wz-color-done: #339933;
@wz-color-optional: #38ef38;
@wz-color-editing: #FF0000;

// dot definitions
@dot-border-width: 2px;

// small definitions
@small-dot-width: 14px;
@small-dot-height: 14px;

// big definitions
@big-dot-width: 50px;
@big-dot-height: 50px;

// extra distance between the bottom of the dots and the baseline texts
@dot-baseline-distance: 0px;

// padding between text and baseline
@text-margin-left: 15px;
@text-height: 14px;

@distance-between-steps: 10px;


.line(@dot-width, @dot-height, @line-color) {
  background-color: @line-color;
  content: '';
  position: absolute;
  left: -(@dot-baseline-distance + @dot-height / 2);
  top: @dot-height;
  height: calc(100% ~'-' @dot-height);
  width: 1px;
}

.state-circle(@dot-width, @dot-height, @dot-border-width) {
  position: absolute;
  top: 0;
  left: -(@dot-baseline-distance + @dot-width);
  width: @dot-width;
  height: @dot-height;
  text-align: center;
  vertical-align: middle;
  line-height: @dot-height - 2 * @dot-border-width;
  transition: 0.25s;
  border-radius: 100%;
}

.state-circle-hover(@dot-width, @dot-height, @dot-border-width) { }

.state-circle-with-border(@color) {
  border-width: @border-width;
  border-style: solid;
  border-color: @color;
}
.state-circle-with-border-hover(@color) {
  border-color: darken(@color, 10%);
}

.state-circle-with-border-and-content(@color) {
  .state-circle-with-border(@arguments);
  color: @color;
}
.state-circle-with-border-and-content-hover(@color) {
  .state-circle-with-border-hover(@arguments);
  color: darken(@color, 10%);
}

.state-circle-with-background(@color) {
  background-color: @color;
}
.state-circle-with-background-hover(@color) {
  background-color: darken(@color, 5%);
}

.state-circle-with-background-and-content(@color) {
  .state-circle-with-background(@color);
  color: black;
}
.state-circle-with-background-and-content-hover(@color) {
  .state-circle-with-background-hover(@color);
}


// Helper mixin to define a step indicator stype like 'small', 'large-filled-symbols' etc.
//
// Arguments:
//   @width  - step indicator width
//   @height - step indicator height
//   @border-width - step indicator border width
//
// In addition to the abovementioned explicit arguments, the `.define-style` mixin uses
// another three helper mixins, which you have to define before including `.define-style`:
//
//   .state-default(@color) { /* default styles to apply to .step-indicator */ }
//   .state-hover(@color)   { /* styles to apply on hover */ }
//
// Each mixin is given the base color for one of possible indicator states (default, current, done etc.).
// In addition to @color argument, in every helper mixin you can use @width, @height, @border-width variables
// passed through the `.define-style` mixin.
//
.define-style(@width: @big-dot-height, @height: @big-dot-height, @border-width: @dot-border-width) {
  padding: (@distance-between-steps / 2) (@distance-between-steps / 2) (@distance-between-steps / 2) (@distance-between-steps / 2 + @dot-baseline-distance + @height);

  li {
    &:not(:last-child):before {
      .line(@width, @height, @wz-color-default);
    }

    a {
      min-height: @height;
    }

    .step-indicator {
      .state-circle(@width, @height, @border-width);
      .state-default(@wz-color-default);
    }
    &.optional .step-indicator {
      .state-default(@wz-color-optional);
    }
    &.done .step-indicator {
      .state-default(@wz-color-done);
    }
    &.current .step-indicator {
      .state-default(@wz-color-current);
    }
    &.current.done .step-indicator {
      .state-default(@wz-color-editing);
    }

    &.navigable a:hover .step-indicator {
      .state-circle-hover(@width, @height, @border-width);
      .state-hover(@wz-color-default);
    }
    &.navigable.optional a:hover .step-indicator {
      .state-hover(@wz-color-optional);
    }
    &.navigable.done a:hover .step-indicator {
      .state-hover(@wz-color-done);
    }
    &.navigable.current a:hover .step-indicator {
      .state-hover(@wz-color-current);
    }
    &.navigable.current.done a:hover .step-indicator {
      .state-hover(@wz-color-editing);
    }
  }
}

aw-wizard-navigation-bar.vertical {
  max-width: 280px;
  width: 20%;
  height: 100%;
  position: sticky;
  top: 0;

  &.small ul.steps-indicator {
    .state-default(@color) { .state-circle-with-background(@color); }
    .state-hover(@color) { .state-circle-with-background-hover(@color); }
    .define-style(@width: @small-dot-width, @height: @small-dot-height, @border-width: 0);
  }

  &.large-filled ul.steps-indicator {
    .state-default(@color) { .state-circle-with-background(@color); }
    .state-hover(@color) { .state-circle-with-background-hover(@color); }
    .define-style(@border-width: 0);
  }

  &.large-empty ul.steps-indicator {
    .state-default(@color) { .state-circle-with-border(@color); }
    .state-hover(@color) { .state-circle-with-border-hover(@color); }
    .define-style();
  }

  &.large-filled-symbols ul.steps-indicator {
    .state-default(@color) { .state-circle-with-background-and-content(@color); }
    .state-hover(@color) { .state-circle-with-background-and-content-hover(@color); }
    .define-style(@border-width: 0);
  }

  &.large-empty-symbols ul.steps-indicator {
    .state-default(@color) { .state-circle-with-border-and-content(@color); }
    .state-hover(@color) { .state-circle-with-border-and-content-hover(@color); }
    .define-style();
  }

  ul.steps-indicator {
    display: flex;
    flex-direction: column;
    justify-content: center;

    list-style: none;
    margin: auto;

    // http://www.paulirish.com/2012/box-sizing-border-box-ftw/
    * {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
    }

    li {
      position: relative;

      &:not(:last-child) {
        margin-bottom: 0;
        padding-bottom: @distance-between-steps;
      }

      a {
        // center labels vertically
        display: flex;
        flex-direction: row;
        align-items: center;

        .label {
          margin-left: @text-margin-left;
          color: @wz-color-current;
          line-height: @text-height;
          font-size: @text-height;
          text-decoration: none;
          text-transform: uppercase;
          text-align: left;
          font-weight: bold;
          transition: 0.25s;
        }
      }
    }

    li.navigable {

      a {
        cursor: pointer;
      }

      a:hover .label {
        color: darken(@wz-color-current, 20%);
      }
    }
  }
}
